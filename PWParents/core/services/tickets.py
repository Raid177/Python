from aiogram import Bot
from core.db import get_conn
from core.repositories import tickets as repo_t
from bot.keyboards.common import ticket_actions_kb

async def ensure_ticket(bot: Bot, support_group_id:int, client_id:int):
    conn = get_conn()
    try:
        # —à—É–∫–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç—ñ–∫–µ—Ç –∫–ª—ñ—î–Ω—Ç–∞ (–±—É–¥—å-—è–∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å—É)
        t = repo_t.ensure_latest_by_client(conn, client_id)

        if t and t.get("thread_id"):
            # —è–∫—â–æ –±—É–≤ –∑–∞–∫—Ä–∏—Ç–∏–π ‚Äî –ø–µ—Ä–µ–≤—ñ–¥–∫—Ä–∏—î–º–æ
            if t["status"] == "closed":
                repo_t.reopen(conn, t["id"])
                await bot.send_message(
                    chat_id=support_group_id,
                    message_thread_id=t["thread_id"],
                    text=f"üü¢ –ü–µ—Ä–µ–≤—ñ–¥–∫—Ä–∏—Ç–æ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è\n–ö–ª—ñ—î–Ω—Ç: <code>{client_id}</code>\n–°—Ç–∞—Ç—É—Å: open",
                    reply_markup=ticket_actions_kb(client_id),
                )
            return t

        # —â–µ –Ω–µ –±—É–ª–æ —Ç–µ–º–∏ ‚Äî —Å—Ç–≤–æ—Ä—é—î–º–æ
        topic = await bot.create_forum_topic(chat_id=support_group_id, name=f"ID{client_id}")
        msg = await bot.send_message(
            chat_id=support_group_id,
            message_thread_id=topic.message_thread_id,
            text=f"üü¢ –ù–æ–≤–µ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è\n–ö–ª—ñ—î–Ω—Ç: <code>{client_id}</code>\n–°—Ç–∞—Ç—É—Å: open",
            reply_markup=ticket_actions_kb(client_id),
        )
        thread_id = msg.message_thread_id

        if t:
            repo_t.update_thread(conn, t["id"], thread_id)
            return {**t, "thread_id": thread_id, "status": "open"}
        else:
            tid = repo_t.create(conn, client_id, thread_id)
            return {"id": tid, "client_user_id": client_id, "thread_id": thread_id, "status": "open"}
    finally:
        conn.close()
