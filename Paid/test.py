import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, MessageHandler, ContextTypes, filters

# ==== –ó–º—ñ–Ω–Ω—ñ ====
BOT_TOKEN = "7129977699:AAFBM0oV8H3pYhj7T9uhbzI5d3dLPr3ICsE"

# ==== –õ–æ–≥—É–≤–∞–Ω–Ω—è ====
logging.basicConfig(
    format='[%(asctime)s] %(message)s', level=logging.INFO, datefmt='%Y-%m-%d %H:%M:%S'
)
log = logging.getLogger(__name__)

# ==== –û–±—Ä–æ–±–Ω–∏–∫ ====
async def handle_file(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message
    log.info("üõ†Ô∏è handle_file –∑–∞–ø—É—â–µ–Ω–æ")

    if not msg:
        log.info("‚ùå msg = None")
        return

    log.info(f"üì© msg.text = {msg.text}")
    log.info(f"üì© msg.caption = {msg.caption}")

    is_pay_command = False
    file_msg = None

    caption = msg.caption.lower() if msg.caption else ""
    if "/–æ–ø–ª–∞—Ç–∞" in caption or "/pay" in caption:
        is_pay_command = True
        file_msg = msg
        log.info("‚úÖ –ö–æ–º–∞–Ω–¥—É –≤–∏–∑–Ω–∞—á–µ–Ω–æ —á–µ—Ä–µ–∑ caption")

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ reply
    if not is_pay_command and msg.reply_to_message:
        replied = msg.reply_to_message
        log.info(f"üìé reply_to_message.caption = {replied.caption}")
        log.info(f"üìé reply_to_message.document = {replied.document is not None}")
        rep_caption = replied.caption.lower() if replied.caption else ""

        if "/–æ–ø–ª–∞—Ç–∞" in rep_caption or "/pay" in rep_caption:
            is_pay_command = True
            file_msg = replied
            log.info("‚úÖ –ö–æ–º–∞–Ω–¥—É –≤–∏–∑–Ω–∞—á–µ–Ω–æ —á–µ—Ä–µ–∑ caption —É reply")
        elif replied.document:
            is_pay_command = True
            file_msg = replied
            log.info("‚úÖ –ö–æ–º–∞–Ω–¥—É –≤–∏–∑–Ω–∞—á–µ–Ω–æ —á–µ—Ä–µ–∑ –¥–æ–∫—É–º–µ–Ω—Ç —É reply")

    # –Ø–∫—â–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥—É ‚Äî –≤–∏–π—Ç–∏
    if not is_pay_command:
        log.info("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–∞. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.")
        return

    if file_msg and file_msg.document:
        log.info(f"üì• –ü—Ä–∏–π–Ω—è—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç: {file_msg.document.file_name}")
        await file_msg.reply_text("‚úÖ –ü—Ä–∏–π–Ω—è—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç –∑ –∫–æ–º–∞–Ω–¥–æ—é /–æ–ø–ª–∞—Ç–∞")
    else:
        await msg.reply_text("‚ö†Ô∏è –û—á—ñ–∫—É—î—Ç—å—Å—è –¥–æ–∫—É–º–µ–Ω—Ç —è–∫ —Ñ–∞–π–ª")

# ==== –ó–∞–ø—É—Å–∫ ====
if __name__ == "__main__":
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.ALL, handle_file))
    log.info("ü§ñ –¢–µ—Å—Ç–æ–≤–∏–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
    app.run_polling()
