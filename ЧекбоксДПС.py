import requests
import time
import json
from datetime import datetime, timedelta

# üîπ –î–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
CLIENT_NAME = "My-Integration"  # –ù–∞–∑–≤–∞ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
CLIENT_VERSION = "1.0"  # –í–µ—Ä—Å—ñ—è —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó
LICENSE_KEY = "4ca2a0429412a537b1eb6b1b"  # üîë –ö–ª—é—á –ª—ñ—Ü–µ–Ω–∑—ñ—ó –∫–∞—Å–∏
PIN_CODE = "9334687350"  # üîë –ü—ñ–Ω-–∫–æ–¥ –∫–∞—Å–∏—Ä–∞

# üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞—Ç–∏ –∑–∞ –≤—á–æ—Ä–∞
yesterday = (datetime.now() - timedelta(days=1)).strftime("%Y-%m-%d")
FROM_DATE = f"{yesterday}T00:00:00+0300"
TO_DATE = f"{yesterday}T23:59:59+0300"

# üîπ URL-–∞–¥—Ä–µ—Å–∏ API
AUTH_URL = "https://api.checkbox.ua/api/v1/cashier/signinPinCode"
Z_REPORT_URL = "https://api.checkbox.ua/api/v1/extended-reports/z"
REPORT_STATUS_URL = "https://api.checkbox.ua/api/v1/extended-reports"  # /{report_id}

# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è (–æ—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω)
auth_headers = {
    "accept": "application/json",
    "X-Client-Name": CLIENT_NAME,
    "X-Client-Version": CLIENT_VERSION,
    "X-License-Key": LICENSE_KEY,
    "Content-Type": "application/json"
}
auth_data = {"pin_code": PIN_CODE}

auth_response = requests.post(AUTH_URL, headers=auth_headers, json=auth_data)

if auth_response.status_code in [200, 201]:
    ACCESS_TOKEN = auth_response.json().get("access_token")
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–∫–µ–Ω.\n")
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: {auth_response.status_code}")
    print(auth_response.json())
    exit()

# üîπ –£–Ω—ñ–∫–∞–ª—å–Ω—ñ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∫–∞—Å–∏ —Ç–∞ –º–∞–≥–∞–∑–∏–Ω—É
CASH_REGISTER_ID = "c13876dd-e51e-433f-a61c-f2c426311111"
BRANCH_ID = "b57123f9-8e9a-49c8-a3f2-3c04d3d11111"

# üîπ –ó–∞–ø–∏—Ç Z-–∑–≤—ñ—Ç—É
z_headers = {
    "accept": "application/json",
    "Authorization": f"Bearer {ACCESS_TOKEN}",
    "X-Client-Name": CLIENT_NAME,
    "X-Client-Version": CLIENT_VERSION,
    "Content-Type": "application/json"
}
z_data = {
    "from_date": FROM_DATE,
    "to_date": TO_DATE,
    "cash_register_id": CASH_REGISTER_ID,
    "branch_id": BRANCH_ID,
    "export_extension": "JSON",
    "organization_info": False
}

# üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—ñ—Ç—É
z_response = requests.post(Z_REPORT_URL, headers=z_headers, json=z_data)

if z_response.status_code == 200:
    report_id = z_response.json().get("id")
    print(f"üìä –ó–∞–ø–∏—Ç –Ω–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è Z-–∑–≤—ñ—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–æ! Report ID: {report_id}\n")
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—ñ—Ç—É: {z_response.status_code}")
    print(z_response.json())
    exit()

# üîπ –û—á—ñ–∫—É—î–º–æ, –ø–æ–∫–∏ –∑–≤—ñ—Ç —Å—Ñ–æ—Ä–º—É—î—Ç—å—Å—è (–º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥)
print("‚è≥ –û—á—ñ–∫—É—î–º–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –∑–≤—ñ—Ç—É...")
for i in range(12):  # –ü–æ–≤—Ç–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç 12 —Ä–∞–∑—ñ–≤ (—Ä–∞–∑ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥)
    time.sleep(5)
    report_status_response = requests.get(f"{REPORT_STATUS_URL}/{report_id}", headers=z_headers)
    report_status = report_status_response.json()

    if report_status.get("status") == "DONE":
        print("‚úÖ –ó–≤—ñ—Ç –≥–æ—Ç–æ–≤–∏–π! –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ...\n")
        break
    else:
        print(f"‚åõ –°—Ç–∞—Ç—É—Å: {report_status.get('status')} (—Å–ø—Ä–æ–±–∞ {i+1}/12)")

# üîπ –û—Ç—Ä–∏–º—É—î–º–æ –≥–æ—Ç–æ–≤–∏–π –∑–≤—ñ—Ç
final_report_response = requests.get(f"{REPORT_STATUS_URL}/{report_id}", headers=z_headers)

if final_report_response.status_code == 200:
    print("\n‚úÖ –ü–æ–≤–Ω—ñ –¥–∞–Ω—ñ –∑–≤—ñ—Ç—É:")
    print(json.dumps(final_report_response.json(), indent=4, ensure_ascii=False))
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–æ–≥–æ –∑–≤—ñ—Ç—É: {final_report_response.status_code}")
    print(final_report_response.json())
