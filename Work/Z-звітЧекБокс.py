import requests
import time
import json
import os
from datetime import datetime, timedelta
from dotenv import load_dotenv

# üîπ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –∑ .env
load_dotenv()

# üîπ –î–∞–Ω—ñ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∑ .env
CLIENT_NAME = "My-Integration"
CLIENT_VERSION = "1.0"
LICENSE_KEY = os.getenv("DPS_LAV_LICENSE_KEY")
PIN_CODE = os.getenv("DPS_LAV_PIN_CODE")

# üîπ –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–∏ –∫–∞—Å–∏ —Ç–∞ —Ç–æ—Ä–≥–æ–≤–æ—ó —Ç–æ—á–∫–∏ –∑ .env
CASH_REGISTER_ID = os.getenv("DPS_LAV_CASH_REGISTER_ID")
BRANCH_ID = os.getenv("DPS_LAV_BRANCH_ID")

# üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞—Ç–∏ –∑–∞ –≤—á–æ—Ä–∞
yesterday = (datetime.now() - timedelta(days=1)).strftime("%Y-%m-%d")
FROM_DATE = f"{yesterday}T00:00:00+0300"
TO_DATE = f"{yesterday}T23:59:59+0300"

# üîπ URL-–∞–¥—Ä–µ—Å–∏ API
AUTH_URL = "https://api.checkbox.ua/api/v1/cashier/signinPinCode"
Z_REPORT_URL = "https://api.checkbox.ua/api/v1/extended-reports/z"
REPORT_STATUS_URL = "https://api.checkbox.ua/api/v1/extended-reports"
REPORT_DOWNLOAD_URL = "https://api.checkbox.ua/api/v1/extended-reports/{report_id}/report.json"

# üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è (–æ—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω)
auth_headers = {
    "accept": "application/json",
    "X-Client-Name": CLIENT_NAME,
    "X-Client-Version": CLIENT_VERSION,
    "X-License-Key": LICENSE_KEY,
    "Content-Type": "application/json"
}
auth_data = {"pin_code": PIN_CODE}

auth_response = requests.post(AUTH_URL, headers=auth_headers, json=auth_data)

if auth_response.status_code in [200, 201]:
    ACCESS_TOKEN = auth_response.json().get("access_token")
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–∫–µ–Ω.\n")
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: {auth_response.status_code}")
    print(auth_response.json())
    exit()

# üîπ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø–æ–¥–∞–ª—å—à–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
z_headers = {
    "accept": "application/json",
    "Authorization": f"Bearer {ACCESS_TOKEN}",
    "X-Client-Name": CLIENT_NAME,
    "X-Client-Version": CLIENT_VERSION,
    "Content-Type": "application/json"
}
z_data = {
    "from_date": FROM_DATE,
    "to_date": TO_DATE,
    "cash_register_id": CASH_REGISTER_ID,
    "branch_id": BRANCH_ID,
    "export_extension": "JSON",
    "organization_info": False
}

# üîπ –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—ñ—Ç—É
z_response = requests.post(Z_REPORT_URL, headers=z_headers, json=z_data)

if z_response.status_code == 200:
    report_id = z_response.json().get("id")
    print(f"üìä –ó–∞–ø–∏—Ç –Ω–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è Z-–∑–≤—ñ—Ç—É —Å—Ç–≤–æ—Ä–µ–Ω–æ! Report ID: {report_id}\n")
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–≤—ñ—Ç—É: {z_response.status_code}")
    print(z_response.json())
    exit()

# üîπ –û—á—ñ–∫—É—î–º–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –∑–≤—ñ—Ç—É (–º–∞–∫—Å–∏–º—É–º 120 —Å–µ–∫—É–Ω–¥)
print("‚è≥ –û—á—ñ–∫—É—î–º–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –∑–≤—ñ—Ç—É...")
for i in range(12):  # 12 —Å–ø—Ä–æ–±, —Ä–∞–∑ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ (120 —Å–µ–∫—É–Ω–¥)
    time.sleep(10)
    report_status_response = requests.get(f"{REPORT_STATUS_URL}/{report_id}", headers=z_headers)
    
    if report_status_response.status_code == 429:
        print("‚ö†Ô∏è –ó–∞–Ω–∞–¥—Ç–æ —á–∞—Å—Ç—ñ –∑–∞–ø–∏—Ç–∏. –ß–µ–∫–∞—î–º–æ —â–µ 30 —Å–µ–∫—É–Ω–¥...")
        time.sleep(30)
        continue

    report_status = report_status_response.json()

    if report_status.get("status") == "DONE":
        print("‚úÖ –ó–≤—ñ—Ç –≥–æ—Ç–æ–≤–∏–π! –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ JSON...\n")
        break
    else:
        print(f"‚åõ –°—Ç–∞—Ç—É—Å: {report_status.get('status')} (—Å–ø—Ä–æ–±–∞ {i+1}/12)")

# üîπ –û—Ç—Ä–∏–º—É—î–º–æ –≥–æ—Ç–æ–≤–∏–π JSON-–∑–≤—ñ—Ç
final_report_url = REPORT_DOWNLOAD_URL.format(report_id=report_id)
final_report_response = requests.get(final_report_url, headers=z_headers)

if final_report_response.status_code == 200:
    print("\n‚úÖ –ü–æ–≤–Ω—ñ –¥–∞–Ω—ñ –∑–≤—ñ—Ç—É:")
    print(json.dumps(final_report_response.json(), indent=4, ensure_ascii=False))
else:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è JSON-–∑–≤—ñ—Ç—É: {final_report_response.status_code}")
    print(final_report_response.json())
